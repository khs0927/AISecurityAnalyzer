# HeartCare 모바일 앱 사용 안내서

## 1. 프로젝트 설정 완료

모바일 앱 개발을 위한 프로젝트 설정이 완료되었습니다. 다음과 같은 작업이 수행되었습니다:

- 모바일 스크린 컴포넌트 구현 및 모든 필요한 화면 추가
- API 인터페이스 및 서버 연동 모듈 개발
- Replit 환경에서 권한 문제 우회를 위한 디렉토리 구성
- React와 React Native 버전 충돌 해결을 위한 패키지 설정

## 2. 모바일 앱 파일 구조

heart-care-expo 디렉토리에 다음과 같은 구조로 앱이 구성되어 있습니다:
```
heart-care-expo/
├── App.js                  # 앱 메인 진입점
├── app.json                # Expo 앱 설정
├── babel.config.js         # Babel 설정
├── package.json            # 의존성 정보
├── tsconfig.json           # TypeScript 설정
├── app/
│   ├── screens/            # 화면 컴포넌트
│   │   ├── HomeScreen.tsx
│   │   ├── HeartDiagnosisScreen.tsx
│   │   ├── EmergencyGuideScreen.tsx
│   │   ├── EmergencyGuideDetailScreen.tsx
│   │   ├── EmergencyContactsScreen.tsx
│   │   └── AiConsultationScreen.tsx
│   ├── api/                # API 연동 모듈
│   │   ├── client.js
│   │   ├── healthApi.js
│   │   ├── contactsApi.js
│   │   └── aiConsultationApi.js
│   ├── navigation/         # 내비게이션 설정
│   │   └── AppNavigator.js
│   ├── constants/          # 상수 및 스타일 설정
│   │   └── Colors.js
│   ├── components/         # 공통 컴포넌트
│   └── hooks/              # 커스텀 훅
└── assets/                 # 이미지, 아이콘 등 리소스
```

## 3. 실행 방법

Replit 환경의 제약 때문에 모바일 앱을 직접 실행하는 것에는 한계가 있습니다. 다음 방법으로 앱을 사용할 수 있습니다:

### 옵션 1: 로컬 환경에서 실행 (권장)
1. Replit 프로젝트를 ZIP 파일로 다운로드합니다.
2. 로컬 컴퓨터에서 압축을 풀고 `heart-care-expo` 디렉토리로 이동합니다.
3. 다음 명령어를 실행합니다:
   ```bash
   npm install
   npx expo start
   ```
4. QR 코드를 스캔하여 실제 모바일 기기에서 테스트하거나, 에뮬레이터에서 실행할 수 있습니다.

### 옵션 2: Expo Snack 사용
1. [Expo Snack](https://snack.expo.dev/) 웹사이트에 접속합니다.
2. `heart-care-expo` 폴더의 주요 파일들을 Snack에 복사합니다.
3. Snack 환경에서 화면 미리보기 및 테스트가 가능합니다.

## 4. 모바일 앱 기능

- 홈 화면: 사용자 건강 정보 요약, 연결된 스마트워치 상태 표시, AI 상담 접근
- 심장진단: 심장 건강 지표 모니터링 및 위험도 분석
- 응급처치: 다양한 응급 상황에 대한 가이드라인 제공
- 비상연락: 긴급 연락처 관리 및 보호자 연락

## 5. 기술적 참고 사항

- React Native 및 Expo 프레임워크 사용
- RESTful API 통신으로 서버와 데이터 교환
- 다국어 지원 (한국어/영어)
- 로컬 알림 및 실시간 데이터 모니터링