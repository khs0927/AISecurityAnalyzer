name: 백엔드 배포

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-deploy.yml'
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: 레포지토리 체크아웃
        uses: actions/checkout@v3
        
      - name: Docker 빌드 및 푸시를 위한 로그인
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Docker 빌드 및 푸시
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/nottoday-backend:latest,${{ secrets.DOCKER_USERNAME }}/nottoday-backend:${{ github.sha }}
      
      - name: 이미지 다이제스트 출력
        run: echo ${{ steps.docker_build.outputs.digest }}
      
      - name: SSH를 통한 원격 배포
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd /opt/nottoday
            docker-compose pull backend
            docker-compose up -d backend
            docker image prune -f
            
  deploy-supabase-functions:
    runs-on: ubuntu-latest
    
    steps:
      - name: 레포지토리 체크아웃
        uses: actions/checkout@v3
      
      - name: Supabase CLI 설치
        run: |
          curl -fsSL https://github.com/supabase/cli/releases/download/v1.100.0/supabase_1.100.0_linux_amd64.deb -o supabase.deb
          sudo dpkg -i supabase.deb
          rm supabase.deb
      
      - name: Supabase Edge Functions 배포
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
        run: |
          cd supabase/functions
          supabase functions deploy medllama --project-ref $SUPABASE_PROJECT_ID
          supabase functions deploy rag-embeddings --project-ref $SUPABASE_PROJECT_ID 